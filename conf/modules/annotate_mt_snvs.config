/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
        ext.when            = Conditional clause
----------------------------------------------------------------------------------------
*/

//
// Mitochondrial annotation options
//

process {
    withName: '.*ANNOTATE_MT_SNVS:HMTNOTE_ANNOTATE' {
        ext.prefix = { "${meta.prefix}" }
        ext.args = '--offline'
    }

    withName: '.*ANNOTATE_MT_SNVS:ENSEMBLVEP_MT' {
        ext.args = { [
            '--dir_plugins vep_cache/Plugins',
            '--plugin LoFtool,LoFtool_scores.txt',
            '--plugin pLI,pLI_values.txt',
            '--plugin SpliceAI,snv=spliceai_21_scores_raw_snv_-v1.3-.vcf.gz,indel=spliceai_21_scores_raw_snv_-v1.3-.vcf.gz',
            '--distance 0',
            '--buffer_size 20000',
            '--format vcf --max_sv_size 248956422',
            '--appris --biotype --cache --canonical --ccds --compress_output bgzip',
            '--domains --exclude_predicted --force_overwrite',
            '--hgvs --humdiv --no_progress --numbers',
            '--merged --polyphen p --protein --offline --regulatory --sift p --symbol --tsl --vcf',
            '--uniprot'
        ].join(' ') }
        ext.prefix = { "${meta.prefix}" }
        publishDir = [
            path: { "${params.outdir}/annotate_snv/mitochondria" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,vcf.gz.tbi}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*ANNOTATE_MT_SNVS:TABIX_TABIX_VEP_MT' {
            publishDir = [
            path: { "${params.outdir}/annotate_snv/mitochondria" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,vcf.gz.tbi}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*ANNOTATE_MT_SNVS:VCFANNO_MT' {
        ext.prefix = { "${meta.prefix}" }
    }

    withName: '.*ANNOTATE_MT_SNVS:ZIP_TABIX_VCFANNO_MT' {
        ext.prefix = { "${meta.prefix}" }
    }

    withName: '.*ANNOTATE_MT_SNVS:HAPLOGREP3_CLASSIFY_MT' {
        ext.args   = '--tree phylotree-rsrs@17.1'
        ext.prefix = { "${meta.prefix}_haplogrep" }
        publishDir = [
            path: { "${params.outdir}/annotate_snv/mitochondria" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
